CREATE OR REPLACE PACKAGE OR_JPB_BCCredits
IS
/*
    Propiedad intelectual de Open International Systems. (c)

    Paquete       : OR_JPB_BCCredits

    Descripción   : Componente de negocio relacionados a la información de los créditos SILOKO.

    Autor         : Jesús David Prasca Bustos
    Fecha         : 08-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega


    08-05-2018    jprascaSAO414826
    Creación
*/


	-- Declaracion de Tipos de datos publicos

	-- Declaracion de variables publicas

	-- Declaracion de metodos publicos
	
 /**********************************************************************
    Propiedad intelectual de OPEN International Systems
    Nombre:         FSBVERSION
    Descripción:    Obtiene la versión del paquete
    ***********************************************************************/
    FUNCTION FSBVERSION
    RETURN  VARCHAR2;



    /**********************************************************************
    Propiedad intelectual de OPEN International Systems
    Nombre:         GetCredit
    Descripción:    Obtiene lo datos de un crédito SILOKO
    ***********************************************************************/
    PROCEDURE GetCredit
    (
        inuCreditId         in  or_jpb_credit.credit_id%TYPE,
        ocuDataCursor       out constants.tyRefCursor
    );


    /**********************************************************************
    Propiedad intelectual de OPEN International Systems
    Nombre:         GetCredits
    Descripción:    Obtiene lo datos de uno o mas céditos SILOKO
    ***********************************************************************/
    PROCEDURE GetCredits
    (
        inuCreditId         in  or_jpb_credit.credit_id%TYPE,
        inuCustomerId       in  or_jpb_credit.customer_id%TYPE,
        inuStoreId          in  or_jpb_credit.store_id%TYPE,
        ocuDataCursor       out constants.tyRefCursor
    );


    /**********************************************************************
    Propiedad intelectual de OPEN International Systems
    Nombre:         GetCustomerCredits
    Descripción:    Obtiene lo datos de uno o mas créditos asociados a un cliente
    ***********************************************************************/
    PROCEDURE GetCustomerCredits
    (
        inuCostumerId       in  or_jpb_credit.customer_id%type,
        ocuDataCursor       out constants.tyRefCursor,
        inuFlag             in  or_jpb_constants_val.styNumber default 0
    );
END OR_JPB_BCCredits;
/
CREATE OR REPLACE PACKAGE BODY OR_JPB_BCCredits
IS

    /*
    Propiedad intelectual de Open International Systems. (c)

    Paquete       : OR_JPB_BCCredits

    Descripción   : Componente de negocio relacionados a la información de los créditos SILOKO.

    Autor         : Jesús David Prasca Bustos
    Fecha         : 08-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega
    
    
    08-05-2018    jprascaSAO414826
    Creación
    */

	-- Declaracion de variables y tipos globales privados del paquete
    CSBVERSION          CONSTANT VARCHAR2(10)                           := or_jpb_constants_val.csbVersion;
    
    cnuDomainYesNot     CONSTANT ge_domain_values.domain_values_id%type := or_jpb_constants_val.cnuDomainYesNot;


	-- Definicion de metodos publicos y privados del paquete


/*******************************************************************************
    Propiedad intelectual de Open International Systems. (c)

    Método:       : FSBVERSION

    Descripción   : Función pública que se usa para obtener la versión del paquete

    Parámetros    :

    Retorno       : CSBVERSION - retorna la variable que contiene la versión

    Autor         : Jesús David Prasca Bustos
    Fecha         : 08-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega

    08-05-2018    jprascaSAO414826
    Creación
*******************************************************************************/
    FUNCTION FSBVERSION
    RETURN VARCHAR2 IS
    BEGIN
        return CSBVERSION;
    END FSBVERSION;

/*******************************************************************************
    Propiedad intelectual de Open International Systems. (c)

    Método:       : GetCredit

    Descripción   : Procedimiento público que obtiene los datos de un crédito
                    asociado a un cliente SILOKO

    Parámetros    : inuCreditId     -   Identificador del crédito
                    ocuDataCursor   -   CURSOR que captura los datos

    Retorno       :

    Autor         : Jesús David Prasca Bustos
    Fecha         : 08-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega

    08-05-2018    jprascaSAO414826                ge_message
    Creación
*******************************************************************************/
    PROCEDURE GetCredit
    (
        inuCreditId         in  or_jpb_credit.credit_id%TYPE,
        ocuDataCursor       out constants.tyRefCursor
    )
    IS
    BEGIN
        ut_trace.trace('Inicia OR_JPB_BCCredits.GetCredit', 7);

        open ocuDataCursor for
            SELECT
                /*+ INDEX(OR_JPB_CREDIT PK_OR_JPB_CREDIT) */
                OR_jpb_credit.credit_id,
                (SELECT daor_jpb_customer.fsbGetDocument(OR_jpb_credit.customer_id) FROM DUAL) DOCUMENTO,
                (SELECT dsor_jpb_customer.fsbGetMRDescription(or_jpb_credit.customer_id) FROM DUAL) NOMBRE_CLIENTE,
                (SELECT dsor_jpb_item.fsbGetMRDescription(or_jpb_credit.item_id) FROM DUAL) PRODUCTO,
                (SELECT dsor_jpb_store.fsbGetMRDescription(or_jpb_credit.store_id) FROM DUAL) ALMACEN,
                (SELECT daor_jpb_item.fnuGetPrice(or_jpb_credit.item_id) FROM DUAL) PRECIO,
                or_jpb_credit.credit_date,
                or_jpb_credit.autorization_id CODIGO_AUTORIZACION,
                or_jpb_credit.is_approved APROBADO,
                (SELECT ge_boprudomainvalues.fsbGetDomainValue(cnuDomainYesNot, or_jpb_credit.is_approved) FROM DUAL) APROBADO_DESC,
                (dage_message.fsbgetdescription(or_jpb_credit.causal_detail_id)) CAUSAL,
                OR_jpb_credit.customer_id parent_id
            FROM
                OR_jpb_credit
            WHERE
                OR_jpb_credit.credit_id = inuCreditId;
                

        ut_trace.trace('Termina OR_JPB_BCCredits.GetCredit', 7);
    EXCEPTION
        when ex.CONTROLLED_ERROR then
            ut_trace.trace('Termina ex.CONTROLLED_ERROR OR_JPB_BCCredits.GetCredit', 7);
            raise ex.CONTROLLED_ERROR;
        when others then
            ut_trace.trace('Termina others OR_JPB_BCCredits.GetCredit', 7);
            Errors.setError;
            raise ex.CONTROLLED_ERROR;
    END GetCredit;


/*******************************************************************************
    Propiedad intelectual de Open International Systems. (c)

    Método:       : GetCustomerCredits

    Descripción   : Procedimiento público que obtiene créditos asociados a un cliente

    Parámetros    : inuCostumerId   -   Identificador del cliente SILOKO
                    ocuDataCursor   -   CURSOR que captura los datos
                    inuFlag         -   Bandera que indica cambios en los datos de salida
                                        en la consulta

    Retorno       :

    Autor         : Jesús David Prasca Bustos
    Fecha         : 08-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega

    08-05-2018    jprascaSAO414826
    Creación
*******************************************************************************/
    PROCEDURE GetCustomerCredits
    (
        inuCostumerId       in  or_jpb_credit.customer_id%type,
        ocuDataCursor       out constants.tyRefCursor,
        inuFlag             in  or_jpb_constants_val.styNumber default 0
    )
    IS
        sbSQL               ut_statement.rtyStatement;
        sbBind              ut_statement.rtyStatement;
        sbWhere             ut_statement.rtyStatement;
        sbRecordBind        ut_statement.rtyStatement;
        sbHint              ut_statement.rtyStatement;
    BEGIN
        ut_trace.trace('Inicia OR_JPB_BCCredits.GetCustomerCredits', 7);

        sbSQL := 'SELECT  /*+
                            INDEX(OR_JPB_CREDIT IDX_OR_JPB_CREDIT02)
                        */
                        (SELECT dsor_jpb_item.fsbGetMRDescription(or_jpb_credit.item_id) FROM DUAL) PRODUCTO,
                        (SELECT dsor_jpb_store.fsbGetMRDescription(or_jpb_credit.store_id) FROM DUAL) ALMACEN,
                        (SELECT daor_jpb_item.fnuGetPrice(or_jpb_credit.item_id) FROM DUAL) PRECIO,
                        trunc(or_jpb_credit.credit_date),
                        or_jpb_credit.is_approved APROBADO,
                        (SELECT ge_boprudomainvalues.fsbGetDomainValue(cnuDomainYesNot, or_jpb_credit.is_approved) FROM DUAL) APROBADO_DESC';

                         

        sbWhere := chr(10) || 'FROM  or_jpb_credit '||chr(10)||'
                         /*+ OR_JPB_BCCredits.GetCustomerCredits*/'||chr(10)||'
                    WHERE    or_jpb_credit.customer_id = :inuCostumerId';
                    
        sbBind  := cnuDomainYesNot||', '||inuCostumerId;
        IF inuFlag  = 0
        THEN
            sbSQL := sbSQL || chr(10) || ',  OR_jpb_credit.customer_id parent_id';
        END IF;
        
        sbSQL := sbSQL || sbWhere;
        
        sbRecordBind := 'BEGIN Open :cuCursor for :sbCurrentSql using ' || sbBind || ';  END;';
        dbms_output.put_Line(sbSQL);
        dbms_output.put_Line('');
        dbms_output.put_Line(sbBind);
        dbms_output.put_Line('');
        dbms_output.put_Line(sbRecordBind);
        dbms_output.put_Line('');
        execute immediate sbRecordBind using ocuDataCursor,sbSQL;
        
        ut_trace.trace('Termina OR_JPB_BCCredits.GetCustomerCredits', 7);
    EXCEPTION
        when ex.CONTROLLED_ERROR then
            ut_trace.trace('Termina ex.CONTROLLED_ERROR OR_JPB_BCPlan.GetCustomerCredits', 7);
            raise ex.CONTROLLED_ERROR;
        when others then
            ut_trace.trace('Termina others OR_JPB_BCCredits.GetCustomerCredits', 7);
            Errors.setError;
            raise ex.CONTROLLED_ERROR;
    END GetCustomerCredits;
    

/*******************************************************************************
    Propiedad intelectual de Open International Systems. (c)

    Método:       : GetCredits                                                        OR_jpb_country

    Descripción   : Procedimiento público que obtiene los datos de varios créditos
                    que cumplen con los criterios de búsqueda

    Parámetros    : inuCreditId     -   Identificador del crédito
                    inuCustomerId   -   Identificador del cliente
                    inuStoreId      -   Identificador del almacén
                    ocuDataCursor   -   CURSOR que toma los datos

    Retorno       :

    Autor         : Jesús David Prasca Bustos
    Fecha         : 08-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega

    08-05-2018    jprascaSAO414826
    Creación
*******************************************************************************/
    PROCEDURE GetCredits
    (
        inuCreditId         in  or_jpb_credit.credit_id%TYPE,
        inuCustomerId       in  or_jpb_credit.customer_id%TYPE,
        inuStoreId          in  or_jpb_credit.store_id%TYPE,
        ocuDataCursor       out constants.tyRefCursor
    )
    IS
        sbSQL               ut_statement.rtyStatement;
        sbBind              ut_statement.rtyStatement;
        sbWhere             ut_statement.rtyStatement;
        sbRecordBind        ut_statement.rtyStatement;
        sbHint              ut_statement.rtyStatement;
        
    BEGIN


        ut_trace.trace('Inicia OR_JPB_BCCredits.GetCredits', 7);
        sbBind  := cnuDomainYesNot;
        --sbWhere := '';
        --sbHint  := '';
        
        IF inuCreditId IS not null THEN
            sbWhere := 'OR_JPB_CREDIT.credit_id = :inuCreditId ';
            sbBind  := sbBind || ',' ||inuCreditId;
            sbHint  := 'index(OR_JPB_CREDIT PK_OR_JPB_CREDIT)';
        END IF;
        
        IF inuStoreId IS not null THEN
            IF sbWhere IS NOT null THEN
                sbWhere := sbWhere || ' AND ';
                sbBind  := sbBind || ','||inuStoreId;
            ELSE
                sbHint  :=  'index(OR_JPB_CREDIT IDX_OR_JPB_CREDIT07)';
                sbBind  := sbBind||', '||inuStoreId||'';
            END IF;
            sbWhere :=  sbWhere || chr(10) ||
                        'OR_JPB_CREDIT.store_id = :inuStoreId ' || chr(10);
        END IF;
        
        
        IF inuCustomerId IS not null THEN
            IF sbWhere IS NOT null THEN
                sbWhere := sbWhere || ' AND ';
                sbBind  := sbBind || ','||inuCustomerId;
            ELSE
                sbHint  :=  'index(OR_JPB_CREDIT IDX_OR_JPB_CREDIT02)';
                sbBind  := sbBind ||','||inuCustomerId;
            END IF;
            sbWhere :=  sbWhere || chr(10) ||
                        'OR_JPB_CREDIT.customer_id = :inuCustomerId ' || chr(10);
        END IF;
        


        sbSQL := 'SELECT /*+ '||
                        sbHint||'*/'||chr(10)||

                '       OR_jpb_credit.credit_id,
                        (SELECT daor_jpb_customer.fsbGetDocument(OR_jpb_credit.customer_id) FROM DUAL) DOCUMENTO,
                        (SELECT dsor_jpb_customer.fsbGetMRDescription(or_jpb_credit.customer_id) FROM DUAL) NOMBRE_CLIENTE,
                        (SELECT dsor_jpb_item.fsbGetMRDescription(or_jpb_credit.item_id) FROM DUAL) PRODUCTO,
                        (SELECT dsor_jpb_store.fsbGetMRDescription(or_jpb_credit.store_id) FROM DUAL) ALMACEN,
                        (SELECT daor_jpb_item.fnuGetPrice(or_jpb_credit.item_id) FROM DUAL) PRECIO,
                        or_jpb_credit.credit_date,
                        or_jpb_credit.autorization_id CODIGO_AUTORIZACION,
                        or_jpb_credit.is_approved APROBADO,
                        (SELECT ge_boprudomainvalues.fsbGetDomainValue(:cnuDomainYesNot, or_jpb_credit.is_approved) FROM DUAL) APROBADO_DESC,
                        (dage_message.fsbgetdescription(or_jpb_credit.causal_detail_id)) CAUSAL,
                        null parent_id
                  FROM  OR_jpb_credit
                        /*+ OR_JPB_BCCredits.GetCredits*/
                  WHERE ' || sbWhere;
        ut_trace.trace('Binds ' || sbBind,8);
        sbRecordBind := 'BEGIN Open :cuCursor for :sbCurrentSql using ' || sbBind || ';  END;';
        dbms_output.put_Line(sbRecordBind);
        dbms_output.put_Line('');
        dbms_output.put_Line(sbSQL);
        dbms_output.put_Line('');
        dbms_output.put_Line(sbBind);
        dbms_output.put_Line('');
        execute immediate sbRecordBind using ocuDataCursor,sbSQL;
        ut_trace.trace('Termina OR_JPB_BCCredits.GetCredits', 7);
    EXCEPTION
        when ex.CONTROLLED_ERROR then
            ut_trace.trace('Termina ex.CONTROLLED_ERROR OR_JPB_BCCredits.GetCredits', 7);
            raise ex.CONTROLLED_ERROR;
        when others then
            ut_trace.trace('Termina others OR_JPB_BCCredits.GetCredits', 7);
            Errors.setError;
            raise ex.CONTROLLED_ERROR;
    END GetCredits;
    
    
    
    
END OR_JPB_BCCredits;
/
