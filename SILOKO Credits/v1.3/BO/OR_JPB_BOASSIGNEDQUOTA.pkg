CREATE OR REPLACE PACKAGE OR_JPB_BOAssignedQuota
IS

    /*
    Propiedad intelectual de Open International Systems. (c)

    Paquete       : OR_JPB_BOAssignedQuota

    Descripción   : Objeto de negocio relacionados a la información de cupos de crédito
                    asociados a los clientes SILOKO.

    Autor         : Jesús David Prasca Bustos
    Fecha         : 05-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega

    05-05-2018    jprascaSAO414826
    Creación
    */
    
    
	-- Declaracion de Tipos de datos publicos

	-- Declaracion de variables publicas

	-- Declaracion de metodos publicos
	
	/**********************************************************************
    Propiedad intelectual de OPEN International Systems
    Nombre:         fsbVersion
    Descripción:    Obtiene la versión del paquete
    ***********************************************************************/
    FUNCTION FSBVERSION
    RETURN VARCHAR2;


    /**********************************************************************
    Propiedad intelectual de OPEN International Systems
    Nombre:         AssignSingleQuota
    Descripción:    Asigna un cupo manualmente a un cliente SILOKO
    ***********************************************************************/
    PROCEDURE AssignSingleQuota
    (
        inuCustomerId    IN     or_jpb_assigned_quota.customer_id%TYPE,
        inuAssigned      IN     or_jpb_assigned_quota.assigned%TYPE,
        inuSuccess       OUT    ge_message.message_id%TYPE
    );


    /**********************************************************************
    Propiedad intelectual de OPEN International Systems
    Nombre:         AllAssignQuota
    Descripción:    Método de asignación masiva de cupos de crédito a clientes
                    SILOKO
    ***********************************************************************/
    PROCEDURE AllAssignQuota;


END OR_JPB_BOAssignedQuota;
/
CREATE OR REPLACE PACKAGE BODY OR_JPB_BOAssignedQuota
IS

    /*
    Propiedad intelectual de Open International Systems. (c)

    Paquete       : OR_JPB_BOAssignedQuota

    Descripción   : Objeto de negocio relacionados a la información de los clientes SILOKO..

    Autor         : Jesús David Prasca Bustos
    Fecha         : 02-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega


    02-05-2018    jprascaSAO414826
    Creación
    */
    
    
	-- Declaracion de variables y tipos globales privados del paquete
    CSBVERSION                  CONSTANT VARCHAR2(10) := or_jpb_constants_val.csbVersion;


	-- Definicion de metodos publicos y privados del paquete


/*******************************************************************************
    Propiedad intelectual de Open International Systems. (c)

    Método:       : FSBVERSION

    Descripción   : Función pública que se usa para obtener la versión del paquete

    Parámetros    :

    Retorno       : CSBVERSION - retorna la variable que contiene la versión

    Autor         : Jesús David Prasca Bustos
    Fecha         : 02-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega

    02-05-2018    jprascaSAO414826
    Creación
*******************************************************************************/
    FUNCTION FSBVERSION
    RETURN VARCHAR2 IS
    BEGIN
        return CSBVERSION;
    END FSBVERSION;


/*******************************************************************************
    Propiedad intelectual de Open International Systems. (c)

    Método:       : AssignSingleQuota

    Descripción   : Método público que se usa para asignar un cupo a un cliente
                    (que no tiene cupo asigando) ignorando los criterios de
                    asignación (manualmente).

    Parámetros    : inuCustomerId   -   Identificador del cliente SILOKO
                    inuAssigned     -   Monto a asignar en el cupo
                    inuSuccess      -   Código de mensaje

    Retorno       :

    Autor         : Jesús David Prasca Bustos
    Fecha         : 05-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega

    05-05-2018    jprascaSAO414826
    Creación
*******************************************************************************/
    PROCEDURE AssignSingleQuota
    (
        inuCustomerId    IN     or_jpb_assigned_quota.customer_id%TYPE,
        inuAssigned      IN     or_jpb_assigned_quota.assigned%TYPE,
        inuSuccess       OUT    ge_message.message_id%TYPE
    )
    IS
        nuFindCustomer  or_jpb_constants_val.styNumber;
    BEGIN

        ut_trace.trace('Inicia OR_JPB_BOAssignedQuota.AssignSingleQuota', 7);

        or_jpb_bcassignedquota.CountCustomerQuota(inuCustomerId, nuFindCustomer);
        
        IF nuFindCustomer = 0
        THEN
        
            or_jpb_bcassignedquota.AssignSingleQuota(inuCustomerId, inuAssigned);
            inuSuccess  := or_jpb_constants_val.cnuVErrorCode(1);
        ELSE
            inusuccess  := OR_jpb_constants_val.cnuVErrorCode(2);
        END IF;
        
        ut_trace.trace('Termina OR_JPB_BOAssignedQuota.AssignSingleQuota', 7);
    EXCEPTION
        when ex.CONTROLLED_ERROR then
            ut_trace.trace('Termina ex.CONTROLLED_ERROR OR_JPB_BOAssignedQuota.AssignSingleQuota', 7);
            raise ex.CONTROLLED_ERROR;
        when others then
            ut_trace.trace('Termina others OR_JPB_BOAssignedQuota.AssignSingleQuota', 7);
            Errors.setError;
            raise ex.CONTROLLED_ERROR;
    END AssignSingleQuota;
    

/*******************************************************************************
    Propiedad intelectual de Open International Systems. (c)

    Método:       : AllAssignQuota

    Descripción   : Método de asignación masiva de cupos de crédito a clientes
                    SILOKO ().

    Parámetros    : inuCustomerId   -   Identificador del cliente SILOKO
                    inuAssigned     -   Monto a asignar en el cupo

    Retorno       :

    Autor         : Jesús David Prasca Bustos
    Fecha         : 05-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega

    05-05-2018    jprascaSAO414826
    Creación
*******************************************************************************/
    PROCEDURE AllAssignQuota
    IS
        nuPivot             or_jpb_customer.customer_id%type := 0;
        tbCustomers         or_jpb_bccustomer.tytbCustomer;
        nuIndex             OR_JPB_CONSTANTS_VAL.styNumber;
        nuUpdateIndex       OR_JPB_CONSTANTS_VAL.styNumber;
        cuPlansCursor       OR_JPB_CONSTANTS_VAL.tyRefCursor;
        tbPlans             or_jpb_bcplan.tytbPlan;
        nuAmount            OR_jpb_tariff.amount%type;
        tbQuota             daor_jpb_assigned_quota.tytbOR_jpb_assigned_quota;
        tbCustomersUpdate   daor_jpb_customer.tytbOR_jpb_customer;
        
    BEGIN
        ut_trace.trace('Inicia OR_JPB_BOAssignedQuota.AllAssignQuota', 7);
        nuUpdateIndex   := 1;
        LOOP
            tbCustomers.delete;
            or_jpb_bocustomer.GetGranularTbCustomer(nuPivot, tbCustomers, or_jpb_constants_val.csbNO);
            nuIndex := tbCustomers.FIRST;

            LOOP
                EXIT WHEN nuIndex IS NULL;
                or_jpb_boplan.GetCustomerPlans(tbCustomers(nuIndex).customer_id, cuPlansCursor, 1);
                tbPlans.delete;
                FETCH cuPlansCursor BULK COLLECT INTO tbPlans LIMIT or_jpb_constants_val.cnuLimit;
                or_jpb_botariff.GetPosibleTariff(tbCustomers(nuIndex), tbPlans, nuAmount);

                IF (nuAmount != 0 AND nuAmount IS NOT NULL)
                THEN
                   -- dbms_output.put_Line('Para el cliente: '||tbCustomers(nuIndex).customer_id||', se asignan: '||nuAmount);
                    tbQuota(nuUpdateIndex).Quota_Id         :=   seq.getnext('SEQ_OR_JPB_ASSIGNED_QUO_372769');
            	    tbQuota(nuUpdateIndex).Customer_Id      :=   tbCustomers(nuIndex).customer_id;
        	        tbQuota(nuUpdateIndex).Assigned         :=   nuAmount;
        	        tbQuota(nuUpdateIndex).Available        :=   nuAmount;
        	        tbQuota(nuUpdateIndex).Is_Enabled       :=   or_jpb_constants_val.csbYES;
        	        
        	        tbCustomersUpdate(nuUpdateIndex).customer_id   :=  tbCustomers(nuIndex).customer_id;
        	        tbCustomersUpdate(nuUpdateIndex).has_quota     :=  or_jpb_constants_val.csbYES;
        	        nuUpdateIndex   := nuUpdateIndex + 1;
        	        commit;
                END IF;

                nuIndex := tbCustomers.next(nuIndex);
            END LOOP;
            
            IF nuUpdateIndex = or_jpb_constants_val.cnuMaxRecords
            OR tbCustomers.COUNT < or_jpb_constants_val.cnuLimit
            THEN
                daor_jpb_assigned_quota.insRecords(tbQuota);
                daor_jpb_customer.updHasQuotaRecords(tbCustomersUpdate);
                tbQuota.delete;
                tbCustomersUpdate.delete;
                nuUpdateIndex := 1;
            END IF;
            
            nuPivot := tbCustomers(tbCustomers.LAST).customer_id;
            EXIT WHEN tbCustomers.COUNT < or_jpb_constants_val.cnuLimit;
        END LOOP;
        ut_trace.trace('Termina OR_JPB_BOAssignedQuota.AllAssignQuota', 7);
    EXCEPTION
        when ex.CONTROLLED_ERROR then
            ut_trace.trace('Termina ex.CONTROLLED_ERROR OR_JPB_BOAssignedQuota.AllAssignQuota', 7);
            raise ex.CONTROLLED_ERROR;
        when others then
            ut_trace.trace('Termina others OR_JPB_BOAssignedQuota.AllAssignQuota', 7);
            Errors.setError;
            raise ex.CONTROLLED_ERROR;
    END AllAssignQuota;

END OR_JPB_BOAssignedQuota;
/
