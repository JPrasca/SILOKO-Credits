CREATE OR REPLACE PACKAGE OR_JPB_BOCustomer
IS

    /*
    Propiedad intelectual de Open International Systems. (c)

    Paquete       : OR_JPB_BOCustomer

    Descripción   : Objeto de negocio relacionados a la información de los clientes SILOKO.

    Autor         : Jesús David Prasca Bustos
    Fecha         : 02-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega

    02-05-2018    jprascaSAO414826
    Creación
    */
    
    
	-- Declaracion de Tipos de datos publicos

	-- Declaracion de variables publicas

	-- Declaracion de metodos publicos
	
	/**********************************************************************
    Propiedad intelectual de OPEN International Systems
    Nombre:         fsbVersion
    Descripción:    Obtiene la versión del paquete
    ***********************************************************************/
    FUNCTION FSBVERSION
    RETURN VARCHAR2;


    /**********************************************************************
    Propiedad intelectual de OPEN International Systems
    Nombre:         GetCustomer
    Descripción:    Obtiene lo datos de un cliente SILOKO
    ***********************************************************************/
    PROCEDURE GetCustomer
    (
        inuCustomerID       in  or_jpb_customer.customer_id%TYPE,
        ocuDataCursor       out OR_JPB_CONSTANTS_VAL.tyRefCursor
    );
    

    /**********************************************************************
    Propiedad intelectual de OPEN International Systems
    Nombre:         GetCustomers
    Descripción:    Procedimiento público que obtiene los datos de varios clientes
                    que cumplen con los criterios de búsqueda
    *********************************************************************/
    PROCEDURE GetCustomers
    (
        inuCustomerId       in  OR_jpb_customer.customer_id%TYPE,
        isbCustomerDoc      in  or_jpb_customer.document%TYPE,
        isbDescription      in  OR_jpb_customer.description%TYPE,
        inuStratumId        in  or_jpb_customer.stratum_id%TYPE,
        ocuDataCursor       out OR_JPB_CONSTANTS_VAL.tyRefCursor
    );
    
    /**********************************************************************
    Propiedad intelectual de OPEN International Systems
    Nombre:         GetGranularTbCustomer
    Descripción:    Obtiene los datos de un grupo de clientes
    ***********************************************************************/
    PROCEDURE GetGranularTbCustomer
    (
        inuPivot        IN   OR_jpb_customer.customer_id%type,
        otbCustomerIn   OUT  or_jpb_bccustomer.tytbCustomer,
        isbhasQuota     IN   or_jpb_customer.has_quota%type default or_jpb_constants_val.csbYES/*,
       isbProcess  in  estaprog.esprprog%type,
        inuThread   in  number,
        inuTotal    in  number */
    );


    /**********************************************************************
    Propiedad intelectual de OPEN International Systems
    Nombre:         frcGetCustForQuota
    Descripción:    Procedimiento público que obtiene datos específicos de un
                    cliente SILOKO (se implementa en la asignación de cupo individual)
    ***********************************************************************/
    FUNCTION frcGetCustForQuota
    (
        inuCustomerId       in  OR_jpb_customer.customer_id%TYPE
    )
    RETURN or_jpb_bccustomer.tyrcCustomer;
    
    /*PROCEDURE CountRegisters
    (
        isbProcess  in  estaprog.esprprog%type,
        inuTotal    in  number,
        onuTotal    out nocopy number
    );*/
    
END OR_JPB_BOCustomer;
/
CREATE OR REPLACE PACKAGE BODY OR_JPB_BOCustomer
IS

    /*
    Propiedad intelectual de Open International Systems. (c)

    Paquete       : OR_JPB_BOCustomer

    Descripción   : Objeto de negocio relacionado a la información de los clientes SILOKO..

    Autor         : Jesús David Prasca Bustos
    Fecha         : 02-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega


    02-05-2018    jprascaSAO414826
    Creación
    */
    
    
	-- Declaracion de variables y tipos globales privados del paquete
    CSBVERSION                  CONSTANT VARCHAR2(10) := or_jpb_constants_val.csbVersion;


	-- Definicion de metodos publicos y privados del paquete


/*******************************************************************************
    Propiedad intelectual de Open International Systems. (c)

    Método:       : FSBVERSION

    Descripción   : Función pública que se usa para obtener la versión del paquete

    Parámetros    :

    Retorno       : CSBVERSION - retorna la variable que contiene la versión

    Autor         : Jesús David Prasca Bustos
    Fecha         : 02-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega

    02-05-2018    jprascaSAO414826
    Creación
*******************************************************************************/
    FUNCTION FSBVERSION
    RETURN VARCHAR2 IS
    BEGIN
        return CSBVERSION;
    END FSBVERSION;


/*******************************************************************************
    Propiedad intelectual de Open International Systems. (c)

    Método:       : GetCustomer

    Descripción   : Procedimiento público que obtiene los datos de un cliente SILOKO

    Parámetros    : inuCustomerID   -   Identificador del cliente SILOKO
                    ocuDataCursor   -   CURSOR que captura los datos

    Retorno       :

    Autor         : Jesús David Prasca Bustos
    Fecha         : 02-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega

    02-05-2018    jprascaSAO414826
    Creación
*******************************************************************************/
    PROCEDURE GetCustomer
    (
        inuCustomerID       in  or_jpb_customer.customer_id%TYPE,
        ocuDataCursor       out OR_JPB_CONSTANTS_VAL.tyRefCursor
    )
    IS
    BEGIN
        ut_trace.trace('Inicia OR_JPB_BOCustomer.GetCustomer', 7);

        -- Se realiza la consulta
        OR_JPB_BCCustomer.GetCustomer
        (
            inuCustomerID,
            ocuDataCursor
        );

        ut_trace.trace('Termina OR_JPB_BOCustomer.GetCustomer', 7);
    EXCEPTION
        when ex.CONTROLLED_ERROR then
            ut_trace.trace('Termina ex.CONTROLLED_ERROR OR_JPB_BOCustomer.GetCustomer', 7);
            raise ex.CONTROLLED_ERROR;
        when others then
            ut_trace.trace('Termina others OR_JPB_BOCustomer.GetCustomer', 7);
            Errors.setError;
            raise ex.CONTROLLED_ERROR;
    END GetCustomer;




/*******************************************************************************
    Propiedad intelectual de Open International Systems. (c)

    Método:       : GetCustomers

    Descripción   : Procedimiento público que obtiene los datos de varios clientes
                    que cumplen con los criterios de búsqueda

    Parámetros    : inuCustomerId   -   Identificador del cliente
                    isbCustomerDoc  -   Identificador del documento de identidad
                    isbDescription  -   Nombre del cliente
                    inuStratumIdo   -   Identificador del estrato
                    ocuDataCursor   -   CURSOR que toma los datos

    Retorno       :

    Autor         : Jesús David Prasca Bustos
    Fecha         : 02-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega

    02-05-2018    jprascaSAO414826
    Creación
*******************************************************************************/
    PROCEDURE GetCustomers
    (
        inuCustomerId       in  OR_jpb_customer.customer_id%TYPE,
        isbCustomerDoc      in  or_jpb_customer.document%TYPE,
        isbDescription      in  OR_jpb_customer.description%TYPE,
        inuStratumId        in  or_jpb_customer.stratum_id%TYPE,
        ocuDataCursor       out OR_JPB_CONSTANTS_VAL.tyRefCursor
    )
    IS

    BEGIN


        ut_trace.trace('Inicia OR_JPB_BOCustomer.GetCustomers', 7);

        or_jpb_bccustomer.GetCustomers
        (
            inuCustomerId,
            UPPER(isbCustomerDoc),
            UPPER(isbDescription),
            inuStratumId,
            ocuDataCursor
        );

        ut_trace.trace('Termina OR_JPB_BOCustomer.GetCustomers', 7);
    EXCEPTION
        when ex.CONTROLLED_ERROR then
            ut_trace.trace('Termina ex.CONTROLLED_ERROR OR_JPB_BOCustomer.GetCustomers', 7);
            raise ex.CONTROLLED_ERROR;
        when others then
            ut_trace.trace('Termina others OR_JPB_BOCustomer.GetCustomers', 7);
            Errors.setError;
            raise ex.CONTROLLED_ERROR;
    END GetCustomers;
    
    
/*******************************************************************************
    Propiedad intelectual de Open International Systems. (c)

    Método:       : GetContractorContracts

    Descripción   : Método público que obtiene los contratos de un contratista

    Parámetros    : inuContractorId     -   Identificador del conrtatista
                    ocuDataCursor       -   CURSOR que captura los datos

    Retorno       :

    Autor         : Jesús David Prasca Bustos
    Fecha         : 20-04-2018

    Historia de Modificaciones
    Fecha         IDEntrega

    20-04-2018    jprascaSAO414826
    Creación
*******************************************************************************/

    PROCEDURE GetGranularTbCustomer
    (
        inuPivot        IN   OR_jpb_customer.customer_id%type,
        otbCustomerIn   OUT  or_jpb_bccustomer.tytbCustomer,
        isbhasQuota     IN   or_jpb_customer.has_quota%type default or_jpb_constants_val.csbYES/*,
        isbProcess  in  estaprog.esprprog%type,
        inuThread   in  number,
        inuTotal    in  number */
    )
    IS

    BEGIN
        ut_trace.trace('Inicia OR_JPB_BOCustomer.GetGranularTbCustomer', 7);
        
        or_jpb_bccustomer.GetGranularTbCustomer(inuPivot, otbCustomerIn, isbhasQuota/*,isbProcess, inuThread, inuTotal*/);
        
        ut_trace.trace('Termina OR_JPB_BOCustomer.GetGranularTbCustomer', 7);
    EXCEPTION
        when ex.CONTROLLED_ERROR then
            ut_trace.trace('Termina ex.CONTROLLED_ERROR OR_JPB_BOCustomer.GetGranularTbCustomer', 7);
            raise ex.CONTROLLED_ERROR;
        when others then
            ut_trace.trace('Termina others OR_JPB_BOCustomer.GetGranularTbCustomer', 7);
            Errors.setError;
            raise ex.CONTROLLED_ERROR;
    END GetGranularTbCustomer;


/*******************************************************************************
    Propiedad intelectual de Open International Systems. (c)

    Método:       : frcGetCustForQuota

    Descripción   : Procedimiento público que obtiene datos específicos de un
                    cliente SILOKO (se implementa en la asignación de cupo individual)

    Parámetros    : inuCustomerId   -   Id del cliente

    Retorno       : rcCusForQuota   -   Registro con los datos del cliente

    Autor         : Jesús David Prasca Bustos
    Fecha         : 16-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega

    16-05-2018    jprascaSAO414826
    Creación
*******************************************************************************/
    FUNCTION frcGetCustForQuota
    (
        inuCustomerId       in  OR_jpb_customer.customer_id%TYPE
    )
    RETURN or_jpb_bccustomer.tyrcCustomer
    IS
    BEGIN
        ut_trace.trace('Termina OR_JPB_BOCustomer.frcGetCustForQuota', 7);

        ut_trace.trace('Termina OR_JPB_BOCustomer.frcGetCustForQuota', 7);

        RETURN or_jpb_bccustomer.frcGetCustForQuota(inuCustomerId);
    EXCEPTION
        when ex.CONTROLLED_ERROR then

            ut_trace.trace('Termina ex.CONTROLLED_ERROR OR_JPB_BOCustomer.frcGetCustForQuota', 7);
            raise ex.CONTROLLED_ERROR;
        when others then

            ut_trace.trace('Termina others OR_JPB_BOCustomer.frcGetCustForQuota', 7);
            Errors.setError;
            raise ex.CONTROLLED_ERROR;
    END frcGetCustForQuota;
    
    
    /*PROCEDURE CountRegisters
    (
        isbProcess  in  estaprog.esprprog%type,
        inuTotal    in  number,
        onuTotal    out nocopy number
    )
    IS
    BEGIN
        or_jpb_bccustomer.GetCountRegisters(onuTotal);
    EXCEPTION
        when ex.CONTROLLED_ERROR then

            ut_trace.trace('Termina ex.CONTROLLED_ERROR OR_JPB_BOCustomer.frcGetCustForQuota', 7);
            raise ex.CONTROLLED_ERROR;
        when others then

            ut_trace.trace('Termina others OR_JPB_BOCustomer.frcGetCustForQuota', 7);
            Errors.setError;
            raise ex.CONTROLLED_ERROR;
    END CountRegisters;*/
    
END OR_JPB_BOCustomer;
/
