CREATE OR REPLACE PACKAGE OR_JPB_BCPlan
IS
/*
    Propiedad intelectual de Open International Systems. (c)

    Paquete       : OR_JPB_BCPlan

    Descripción   : Componente de negocio relacionados a la información de los clientes SILOKO.

    Autor         : Jesús David Prasca Bustos
    Fecha         : 02-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega


    02-05-2018    jprascaSAO414826
    Creación
*/


	-- Declaracion de Tipos de datos publicos

	-- Declaracion de variables publicas

	-- Declaracion de metodos publicos
	
 /**********************************************************************
    Propiedad intelectual de OPEN International Systems
    Nombre:         FSBVERSION
    Descripción:    Obtiene la versión del paquete
    ***********************************************************************/
    FUNCTION FSBVERSION
    RETURN  VARCHAR2;


    /**********************************************************************
    Propiedad intelectual de OPEN International Systems
    Nombre:         GetCustomer
    Descripción:    Obtiene lo datos de un cliente SILOKO
    ***********************************************************************/
    /*PROCEDURE GetCustomer
    (
        inuCustomerID       in  or_jpb_customer.customer_id%TYPE,
        ocuDataCursor       out constants.tyRefCursor
    );*/


    /**********************************************************************
    Propiedad intelectual de OPEN International Systems
    Nombre:         GetContractorContracts
    Descripción:    Obtiene lo datos de contratos de un contratista
    ***********************************************************************/
    /*PROCEDURE GetCustomerPlan
    (
        inuCustomerID     in  ct_jpb_contract.contractor_id%type,
        ocuDataCursor       out constants.tyRefCursor,
        inuFlag             in  NUMBER default 0
    );*/


    /**********************************************************************
    Propiedad intelectual de OPEN International Systems
    Nombre:         GetPlan
    Descripción:    Obtiene lo datos de un plan SILOKO
    ***********************************************************************/
    PROCEDURE GetPlan
    (
        inuPlanID           in  or_jpb_plan.plan_id%TYPE,
        ocuDataCursor       out constants.tyRefCursor
    );


    /**********************************************************************
    Propiedad intelectual de OPEN International Systems
    Nombre:         GetPlan
    Descripción:    Obtiene lo datos de uno o mas planes SILOKO
    ***********************************************************************/
    PROCEDURE GetPlans
    (
        inuPlanId           in  or_jpb_plan.plan_id%TYPE,
        inuCustomerId       in  or_jpb_plan.customer_id%TYPE,
        inuPlanTypeId       in  or_jpb_plan.plan_type_id%TYPE,
        isbActive           in  or_jpb_plan.is_active%TYPE,
        ocuDataCursor       out constants.tyRefCursor
    );


    /**********************************************************************
    Propiedad intelectual de OPEN International Systems
    Nombre:         GetCustomerPlans
    Descripción:    Obtiene lo datos de uno o mas planes SILOKO asociados a un cliente
    ***********************************************************************/
    PROCEDURE GetCustomerPlans
    (
        inuCostumerId       in  or_jpb_plan.customer_id%type,
        ocuDataCursor       out constants.tyRefCursor,
        inuFlag             in  NUMBER default 0
    );
END OR_JPB_BCPlan;
/
CREATE OR REPLACE PACKAGE BODY OR_JPB_BCPlan
IS

    /*
    Propiedad intelectual de Open International Systems. (c)

    Paquete       : OR_JPB_BCPlan

    Descripción   : Componente de negocio relacionados a la información de los clientes SILOKO.

    Autor         : Jesús David Prasca Bustos
    Fecha         : 02-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega
    
    
    02-05-2018    jprascaSAO414826
    Creación
    */

	-- Declaracion de variables y tipos globales privados del paquete
    CSBVERSION                  CONSTANT VARCHAR2(10) := 'SAO414826';
    cnuDomainYesNot             CONSTANT ge_domain_values.domain_values_id%type := 60066;


	-- Definicion de metodos publicos y privados del paquete


/*******************************************************************************
    Propiedad intelectual de Open International Systems. (c)

    Método:       : FSBVERSION

    Descripción   : Función pública que se usa para obtener la versión del paquete

    Parámetros    :

    Retorno       : CSBVERSION - retorna la variable que contiene la versión

    Autor         : Jesús David Prasca Bustos
    Fecha         : 02-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega

    02-05-2018    jprascaSAO414826
    Creación
*******************************************************************************/
    FUNCTION FSBVERSION
    RETURN VARCHAR2 IS
    BEGIN
        return CSBVERSION;
    END FSBVERSION;

/*******************************************************************************
    Propiedad intelectual de Open International Systems. (c)

    Método:       : GetPlan

    Descripción   : Procedimiento público que obtiene los datos de un cliente SILOKO

    Parámetros    : inuPlanID       -   Identificador del plan SILOKO
                    ocuDataCursor   -   CURSOR que captura los datos

    Retorno       :

    Autor         : Jesús David Prasca Bustos
    Fecha         : 02-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega

    02-05-2018    jprascaSAO414826
    Creación
*******************************************************************************/
    PROCEDURE GetPlan
    (
        inuPlanID           in  or_jpb_plan.plan_id%TYPE,
        ocuDataCursor       out constants.tyRefCursor
    )
    IS
    BEGIN
        ut_trace.trace('Inicia OR_JPB_BCCustomer.GetCustomer', 7);

        open ocuDataCursor for
            SELECT
                /*+ index(OR_JPB_PLAN PK_OR_JPB_PLAN)*/
                or_jpb_plan.plan_id,
                (SELECT daor_jpb_plan_type.fsbGetDescription(OR_jpb_plan.plan_type_id) FROM DUAL) TIPO,
                or_jpb_plan.is_active ACTIVO,
                (select GE_BOPRUDomainValues.fsbGetDomainValue(cnuDomainYesNot, IS_active) FROM dual) ACTIVO_DESC,
                OR_jpb_plan.customer_id PARENT_ID
            FROM
                or_jpb_plan
            WHERE
                or_jpb_plan.plan_id = inuPlanID;

        ut_trace.trace('Termina OR_JPB_BCCustomer.GetCustomer', 7);
    EXCEPTION
        when ex.CONTROLLED_ERROR then
            ut_trace.trace('Termina ex.CONTROLLED_ERROR OR_JPB_BCCustomer.GetCustomer', 7);
            raise ex.CONTROLLED_ERROR;
        when others then
            ut_trace.trace('Termina others OR_JPB_BCCustomer.GetCustomer', 7);
            Errors.setError;
            raise ex.CONTROLLED_ERROR;
    END GetPlan;


/*******************************************************************************
    Propiedad intelectual de Open International Systems. (c)

    Método:       : GetCustomerPlans

    Descripción   : Procedimiento público que obtiene planes asociados a un cliente

    Parámetros    : inuContractorId -   Identificador del cliente SILOKO
                    ocuDataCursor   -   CURSOR que captura los datos
                    inuFlag         -   Bandera que indica cambios en los datos de salida
                                        en la consulta

    Retorno       :

    Autor         : Jesús David Prasca Bustos
    Fecha         : 20-04-2018

    Historia de Modificaciones
    Fecha         IDEntrega

    02-05-2018    jprascaSAO414826
    Creación
*******************************************************************************/
    PROCEDURE GetCustomerPlans
    (
        inuCostumerId       in  or_jpb_plan.customer_id%type,
        ocuDataCursor       out constants.tyRefCursor,
        inuFlag             in  NUMBER default 0
    )
    IS
        sbSQL               ut_statement.rtyStatement;
        sbBind              ut_statement.rtyStatement;
        sbWhere             ut_statement.rtyStatement;
        sbRecordBind        ut_statement.rtyStatement;
        sbHint              ut_statement.rtyStatement;
    BEGIN
        ut_trace.trace('Inicia OR_JPB_BCCustomer.GetContractor', 7);

        sbSQL := 'SELECT  /*+
                            INDEX(OR_JPB_PLAN IDX_OR_JPB_PLAN01)
                        */
                         or_jpb_plan.plan_id,
                         (SELECT dsor_jpb_plan_type.fsbGetMRDescription(OR_jpb_plan.plan_type_id) FROM DUAL) TIPO,
                         or_jpb_plan.is_active,
                         (select GE_BOPRUDomainValues.fsbGetDomainValue(:cnuDomainYesNot, IS_active) FROM dual) ACTIVO_DESC';

                         

        sbWhere := chr(10) || 'FROM     or_jpb_plan '||chr(10)||'
                         /*+ OR_JPB_BCPlan.GetCustomerPlans*/'||chr(10)||'
                    WHERE    or_jpb_plan.customer_id = :inuCostumerId';
                    
        sbBind  := cnuDomainYesNot||', '||inuCostumerId;
        IF inuFlag  = 0
        THEN
            sbSQL := sbSQL || chr(10) || ', OR_jpb_plan.customer_id Parent';
        END IF;
        
        sbSQL := sbSQL || sbWhere;
        
        sbRecordBind := 'BEGIN Open :cuCursor for :sbCurrentSql using ' || sbBind || ';  END;';
        dbms_output.put_Line(sbSQL);
        dbms_output.put_Line('');
        dbms_output.put_Line(sbBind);
        dbms_output.put_Line('');
        dbms_output.put_Line(sbRecordBind);
        dbms_output.put_Line('');
        execute immediate sbRecordBind using ocuDataCursor,sbSQL;
        
        ut_trace.trace('Termina OR_JPB_BCCustomer.GetCustomerPlans', 7);
    EXCEPTION
        when ex.CONTROLLED_ERROR then
            ut_trace.trace('Termina ex.CONTROLLED_ERROR OR_JPB_BCPlan.GetCustomerPlans', 7);
            raise ex.CONTROLLED_ERROR;
        when others then
            ut_trace.trace('Termina others OR_JPB_BCPlan.GetCustomerPlans', 7);
            Errors.setError;
            raise ex.CONTROLLED_ERROR;
    END GetCustomerPlans;
    

/*******************************************************************************
    Propiedad intelectual de Open International Systems. (c)

    Método:       : GetPlans

    Descripción   : Procedimiento público que obtiene los datos de varios planes
                    que cumplen con los criterios de búsqueda

    Parámetros    : inuPlanId       -   Identificador del plan
                    isbCustomerId   -   Identificador del cliente
                    inuPlanTypeId   -   Nombre del tipo de plan
                    isbActive       -   Identificador del estado del plan
                    ocuDataCursor   -   CURSOR que toma los datos

    Retorno       :

    Autor         : Jesús David Prasca Bustos
    Fecha         : 02-05-2018

    Historia de Modificaciones
    Fecha         IDEntrega

    02-05-2018    jprascaSAO414826
    Creación
*******************************************************************************/
    PROCEDURE GetPlans
    (
        inuPlanId           in  or_jpb_plan.plan_id%TYPE,
        inuCustomerId       in  or_jpb_plan.customer_id%TYPE,
        inuPlanTypeId       in  or_jpb_plan.plan_type_id%TYPE,
        isbActive           in  or_jpb_plan.is_active%TYPE,
        ocuDataCursor       out constants.tyRefCursor
    )
    IS
        sbSQL               ut_statement.rtyStatement;
        sbBind              ut_statement.rtyStatement;
        sbWhere             ut_statement.rtyStatement;
        sbRecordBind        ut_statement.rtyStatement;
        sbHint              ut_statement.rtyStatement;
        
    BEGIN


        ut_trace.trace('Inicia OR_JPB_BCPlan.GetPlans', 7);
        sbBind  := cnuDomainYesNot;
        --sbWhere := '';
        --sbHint  := '';
        
        IF inuPlanId IS not null THEN
            sbWhere := 'OR_JPB_PLAN.plan_id = :inuPlanId ';
            sbBind  := sbBind || ',' ||inuPlanId;
            sbHint  := 'index(OR_JPB_PLAN PK_OR_JPB_PLAN)';
        END IF;
        
        IF inuCustomerId IS not null THEN
            IF sbWhere IS NOT null THEN
                sbWhere := sbWhere || ' AND ';
                sbBind  := sbBind || ','||inuCustomerId;
            ELSE
                sbHint  :=  'index(OR_JPB_PLAN IDX_OR_JPB_PLAN01)';
                sbBind  := sbBind ||','||inuCustomerId;
            END IF;
            sbWhere :=  sbWhere || chr(10) ||
                        'OR_JPB_PLAN.customer_id = :inuCustomerId' || chr(10);
        END IF;
        
        IF inuPlanTypeId IS not null THEN
            IF sbWhere IS NOT null THEN
                sbWhere := sbWhere || ' AND ';
                sbBind  := sbBind || ','||inuPlanTypeId;
            ELSE
                sbHint  :=  'index(OR_JPB_PLAN IDX_OR_JPB_PLAN02)';
                sbBind  := sbBind||', '||inuPlanTypeId||'';
            END IF;
            sbWhere :=  sbWhere || chr(10) ||
                        'OR_JPB_PLAN.plan_type_id = :inuPlanTypeId' || chr(10);
        END IF;

         IF isbActive IS not null THEN
            IF sbWhere IS NOT null THEN
                sbWhere := sbWhere || ' AND ';
                sbBind  := sbBind || ','''||isbActive||'''';
            ELSE
                sbHint  :=  'index(OR_JPB_PLAN IDX_OR_JPB_PLAN03)';
                sbBind  := sbBind||','''||isbActive||'''';
            END IF;
            sbWhere :=  sbWhere || chr(10) ||
                        ' OR_JPB_PLAN.is_active = :isbActive ' ||chr(10);
        END IF;

        sbSQL := 'SELECT /*+ '||
                        sbHint||'*/'||chr(10)||
        '                       or_jpb_plan.plan_id,
                                (SELECT dsor_jpb_plan_type.fsbGetMRDescription(or_jpb_plan.plan_type_id) FROM DUAL) Tipo,
                                (SELECT dsor_jpb_customer.fsbGetMRDescription(or_jpb_plan.customer_id) FROM DUAL) Cliente,
                                (select GE_BOPRUDomainValues.fsbGetDomainValue(:cnuDomainYesNot, IS_active) FROM dual) ACTIVO_DESC,
                                or_jpb_plan.is_active ACTIVO,
                        null parent_id
                  FROM  OR_jpb_plan
                        /*+ OR_JPB_BCPlan.GetCustomers*/
                  WHERE ' || sbWhere;
        ut_trace.trace('Binds ' || sbBind,8);
        sbRecordBind := 'BEGIN Open :cuCursor for :sbCurrentSql using ' || sbBind || ';  END;';
        --dbms_output.put_Line(sbRecordBind);
        --dbms_output.put_Line('');
        --dbms_output.put_Line(sbSQL);
        --dbms_output.put_Line('');
        --dbms_output.put_Line(sbBind);
        --dbms_output.put_Line('');
        execute immediate sbRecordBind using ocuDataCursor,sbSQL;
        ut_trace.trace('Termina OR_JPB_BCPlan.GetPlans', 7);
    EXCEPTION
        when ex.CONTROLLED_ERROR then
            ut_trace.trace('Termina ex.CONTROLLED_ERROR OR_JPB_BCPlan.GetPlans', 7);
            raise ex.CONTROLLED_ERROR;
        when others then
            ut_trace.trace('Termina others OR_JPB_BCPlan.GetPlans', 7);
            Errors.setError;
            raise ex.CONTROLLED_ERROR;
    END GetPlans;
    
END OR_JPB_BCPlan;
/
