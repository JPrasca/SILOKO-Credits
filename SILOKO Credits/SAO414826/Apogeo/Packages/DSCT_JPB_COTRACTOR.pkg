CREATE OR REPLACE PACKAGE DSCT_JPB_COTRACTOR
IS 

    /* Tipo de colección para memoria de múltiples registros*/
	subtype styIndexKey is VARCHAR2(17);

    type tytbMRDescription is table of CT_jpb_cotractor.Description%type index by styIndexKey;


    /***** Metodos Publicos ****/

    FUNCTION fsbVersion
    RETURN varchar2;

	PROCEDURE ClearMemory;


    /*Método para obtener descripción con caché de multiples valores de Description*/
    FUNCTION fsbGetMRDescription
	(
		
		inuContractor_Id in CT_jpb_cotractor.Contractor_Id%type
	)
	RETURN CT_jpb_cotractor.Description%type;


END DSCT_JPB_COTRACTOR;
/
CREATE OR REPLACE PACKAGE BODY DSCT_JPB_COTRACTOR
IS

   /* Constantes locales al paquete */

	csbVersion CONSTANT VARCHAR2(20) := 'SAO414826';
   /* Variables privadas */

    /* Tabla global MultiRecord de Description */
    gtbMRDescription tytbMRDescription;
	/* Métodos privados */

    FUNCTION fsbVersion
    RETURN varchar2
	IS
	BEGIN
		return csbVersion;
	END;

	PROCEDURE ClearMemory IS
	BEGIN
        gtbMRDescription.delete;
	END ClearMemory;


    PROCEDURE LoadMRDescription
	(   
		inuContractor_Id in CT_jpb_cotractor.Contractor_Id%type
	)
    IS
        sbDescription   CT_jpb_cotractor.Description%type;
        sbKey      styIndexKey;
	BEGIN
    	IF(DACT_jpb_cotractor.fblExist(inuContractor_Id))
        then
            sbDescription := DACT_jpb_cotractor.fsbGetDescription( inuContractor_Id );
        ELSE
            sbDescription := null;
        END IF;
        sbKey := inuContractor_Id;
        gtbMRDescription(sbKey) := sbDescription;
	EXCEPTION
		when others then
            raise;
	END LoadMRDescription;

    FUNCTION fsbGetMRDescription
    (    
		inuContractor_Id in CT_jpb_cotractor.Contractor_Id%type
	)
	RETURN CT_jpb_cotractor.Description%type
    IS
        sbKey      styIndexKey;
	BEGIN
        sbKey := inuContractor_Id;

        if (replace(sbKey,'|') IS null) then
            return null;
        end if;

        if (not gtbMRDescription.exists(sbKey)) then
            LoadMRDescription(inuContractor_Id);
        end if;
		return (gtbMRDescription(sbKey));
	EXCEPTION
		when others then
			raise;
	END fsbGetMRDescription;
END DSCT_JPB_COTRACTOR;
/